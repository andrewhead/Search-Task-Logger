# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-31 21:54
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('form', '0003_auto_20160531_2059'),
    ]

    operations = [
        migrations.AddField(
            model_name='packagecomparison',
            name='likert_preference',
            field=models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, null=True, verbose_name='Which package would you rather use?'),
        ),
        migrations.AddField(
            model_name='packagecomparison',
            name='likert_quality',
            field=models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, null=True, verbose_name='Which package has a better community and quality of documentation?'),
        ),
        migrations.AddField(
            model_name='postquestionnaire',
            name='important_concern1',
            field=models.CharField(blank=True, choices=[(b'I will be able to find How-To documentation for all the tasks I want to do.', b'I will be able to find How-To documentation for all the tasks I want to do.'), (b'Developers will provide answers to questions I ask as fast as I need them to.', b'Developers will provide answers to questions I ask as fast as I need them to.'), (b'The documentation (e.g., API docs and example code) will reflect the most recent code.', b'The documentation (e.g., API docs and example code) will reflect the most recent code.'), (b'The community will be welcoming when they respond to questions I ask.', b'The community will be welcoming when they respond to questions I ask.'), (b'The developers that write documentation produce trustworthy documentation and example code.', b'The developers that write documentation produce trustworthy documentation and example code.'), (b'The package was designed for users with my vocabulary, technical proficiency, and goals.', b'The package was designed for users with my vocabulary, technical proficiency, and goals.')], max_length=1000, null=True, verbose_name='To me, the most important question from this set when choosing a package is:'),
        ),
        migrations.AddField(
            model_name='postquestionnaire',
            name='important_concern2',
            field=models.CharField(blank=True, choices=[(b'I will be able to find How-To documentation for all the tasks I want to do.', b'I will be able to find How-To documentation for all the tasks I want to do.'), (b'Developers will provide answers to questions I ask as fast as I need them to.', b'Developers will provide answers to questions I ask as fast as I need them to.'), (b'The documentation (e.g., API docs and example code) will reflect the most recent code.', b'The documentation (e.g., API docs and example code) will reflect the most recent code.'), (b'The community will be welcoming when they respond to questions I ask.', b'The community will be welcoming when they respond to questions I ask.'), (b'The developers that write documentation produce trustworthy documentation and example code.', b'The developers that write documentation produce trustworthy documentation and example code.'), (b'The package was designed for users with my vocabulary, technical proficiency, and goals.', b'The package was designed for users with my vocabulary, technical proficiency, and goals.')], max_length=1000, null=True, verbose_name='The second most important question is:'),
        ),
        migrations.AlterField(
            model_name='packagecomparison',
            name='likert_community',
            field=models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, null=True, verbose_name='Which package has a better community?'),
        ),
        migrations.AlterField(
            model_name='packagecomparison',
            name='likert_documentation',
            field=models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, null=True, verbose_name='Which package has better documentation?'),
        ),
        migrations.AlterField(
            model_name='question',
            name='concern',
            field=models.CharField(max_length=1000, verbose_name='For this concern, which package is better?'),
        ),
        migrations.AlterField(
            model_name='question',
            name='evidence',
            field=models.CharField(blank=True, help_text='Refer to specific pages and content from the web.', max_length=10000, null=True, verbose_name='What evidence informs your rating?'),
        ),
        migrations.AlterField(
            model_name='question',
            name='likert_comparison_evidence',
            field=models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, verbose_name='Based only on the evidence you have seen, which package is better for this concern?'),
        ),
        migrations.AlterField(
            model_name='question',
            name='likert_comparison_intuition',
            field=models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, verbose_name='Based on your instinct, which package is better for this concern?'),
        ),
        migrations.AlterField(
            model_name='question',
            name='likert_coverage',
            field=models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, verbose_name="I found all the information that's relevant to this question."),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='concern',
            field=models.CharField(max_length=1000, verbose_name='Task: Find which package better satisfies this concern'),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='strategy',
            field=models.CharField(help_text='Please answer in 1 or 2 sentences.  Feel free to take a minute to think about a strategy.', max_length=10000, verbose_name='What strategy will you use to find out which package is better for this concern?'),
        ),
    ]
