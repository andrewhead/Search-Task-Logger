# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-30 20:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PackageComparison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('before', 'before'), ('after', 'after')], max_length=100)),
                ('likert_community', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, verbose_name='Which package has a better community?')),
                ('likert_documentation', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, verbose_name='Which package has better documentation?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Postquestionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perception_change', models.CharField(choices=[('Strongly agree', 'Strongly agree'), ('Agree', 'Agree'), ('Neutral', 'Neutral'), ('Disagree', 'Disagree'), ('Strongly disagree', 'Strongly disagree')], max_length=100, verbose_name='My perception of the support and documentation for these packages changed over the course of answering these questions.')),
                ('change_justification', models.CharField(max_length=10000, verbose_name='If you agree, how did your perception of the support and documentation for these packages change over the course of answering these questions?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prequestionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programming_years', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24)], verbose_name='How many years of experience do you have programming?')),
                ('python_years', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24)], verbose_name='How many years of experience do you have programming with Python or Python packages?')),
                ('programming_profiency', models.CharField(choices=[('Novice', 'Novice'), ('Proficient', 'Proficient'), ('Expert', 'Expert')], max_length=100, verbose_name='How would you describe your proficiency as a programmer?')),
                ('python_proficiency', models.CharField(choices=[('Novice', 'Novice'), ('Proficient', 'Proficient'), ('Expett', 'Expett')], max_length=100, verbose_name='How would you describe your proficiency with Python?')),
                ('occupation', models.CharField(choices=[('Software developer', 'Software developer'), ('Graduate student', 'Graduate student'), ('Undergraduate student', 'Undergraduate student'), ('Project manager', 'Project manager'), ('Quality assurance', 'Quality assurance'), ('Systems administrator', 'Systems administrator'), ('Other', 'Other')], max_length=200, verbose_name='What is your job?')),
                ('gender', models.CharField(max_length=500, verbose_name='Gender?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_index', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('concern', models.CharField(max_length=1000)),
                ('likert_comparison', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, verbose_name='For this concern, which package is better?')),
                ('scratch_work', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Scratch work')),
                ('strategy', models.CharField(help_text='What documents did you look at and why?', max_length=4000, verbose_name='What was your strategy for answering this question?')),
                ('url1', models.CharField(max_length=1000, verbose_name='URL of indicator 1')),
                ('url1_where', models.CharField(max_length=1000, verbose_name='What web site does this URL point to?')),
                ('url1_what', models.CharField(max_length=10000, verbose_name='What information on that site helped you?')),
                ('url1_why', models.CharField(max_length=10000, verbose_name='Why was this helpful?')),
                ('url2', models.CharField(blank=True, max_length=1000, null=True, verbose_name='URL of indicator 2')),
                ('url2_where', models.CharField(blank=True, max_length=1000, null=True, verbose_name='What web site does this URL point to?')),
                ('url2_what', models.CharField(blank=True, max_length=10000, null=True, verbose_name='What information on that site helped you?')),
                ('url2_why', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Why was this helpful?')),
                ('likert_confidence', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)], default=-1, verbose_name='How confident are you in your judgment?')),
                ('extra_information', models.CharField(blank=True, max_length=10000, null=True, verbose_name='What additional information do you want to see to better answer this question?')),
                ('comments', models.CharField(blank=True, max_length=10000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_index', models.IntegerField(db_index=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('event_type', models.CharField(max_length=300)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
